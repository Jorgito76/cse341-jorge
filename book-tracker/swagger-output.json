{
  "swagger": "2.0",
  "info": {
    "title": "Book Tracker API",
    "description": "API documentation for the Book Tracker project",
    "version": "1.0.0"
  },
  "host": "cse341-jorge.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Books",
      "description": "Book resources"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "",
        "responses": {
          "200": {
            "description": "Array of books",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "68e1701a017b73509b11b427"
                  },
                  "title": {
                    "type": "string",
                    "example": "The Pragmatic Programmer"
                  },
                  "author": {
                    "type": "string",
                    "example": "Andrew Hunt, David Thomas"
                  },
                  "isbn": {
                    "type": "string",
                    "example": "978-0201616224"
                  },
                  "genre": {
                    "type": "string",
                    "example": "Software"
                  },
                  "status": {
                    "type": "string",
                    "example": "finished"
                  },
                  "rating": {
                    "type": "number",
                    "example": 5
                  },
                  "startedAt": {
                    "type": "string",
                    "example": "2024-09-01"
                  },
                  "finishedAt": {
                    "type": "string",
                    "example": "2024-09-20"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Classic."
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "description": "",
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "required": true,
            "description": "Book to create",
            "schema": {
              "$ref": "#/definitions/BookCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "68e1701a017b73509b11b427"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a single book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the book"
          }
        ],
        "responses": {
          "200": {
            "description": "Book found"
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update an existing book",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the book to update"
          },
          {
            "name": "book",
            "in": "body",
            "required": true,
            "description": "Updated book fields (must satisfy schema)",
            "schema": {
              "$ref": "#/definitions/BookUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Updated successfully (no content)"
          },
          "400": {
            "description": "Invalid id or validation failed"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the book to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "BookCreate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Clean Architecture"
        },
        "author": {
          "type": "string",
          "example": "Robert C. Martin"
        },
        "genre": {
          "type": "string",
          "example": "Software"
        },
        "isbn": {
          "type": "string",
          "example": "978-0134494166"
        },
        "status": {
          "type": "string",
          "example": "planned"
        },
        "rating": {
          "type": "number",
          "example": 5
        },
        "startedAt": {
          "type": "string",
          "example": "2025-10-01"
        },
        "finishedAt": {},
        "notes": {
          "type": "string",
          "example": "To read soon"
        }
      }
    },
    "BookUpdate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Clean Architecture (2nd Edition)"
        },
        "author": {
          "type": "string",
          "example": "Robert C. Martin"
        },
        "genre": {
          "type": "string",
          "example": "Software"
        },
        "status": {
          "type": "string",
          "example": "reading"
        },
        "rating": {
          "type": "number",
          "example": 5
        }
      }
    }
  }
}